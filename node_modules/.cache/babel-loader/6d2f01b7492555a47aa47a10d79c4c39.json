{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pauli\\\\projects\\\\infinity-stones\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport Gauntlet from './resources/gauntlet-empty.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [myText, setMyText] = React.useState('Original Text');\n\n  function createCookie() {\n    let cookie = Date.now();\n    return cookie;\n  }\n\n  function getElapsedTime(cookie) {\n    let dateNow = Date.now();\n    let elapsedTime = new Date(dateNow - cookie);\n\n    if (elapsedTime) {\n      let readableTime = new Date(elapsedTime.toLocaleDateString());\n      return readableTime;\n    } else return \"null\";\n  }\n\n  React.useEffect(() => {\n    // Runs after the first render() lifecycle\n    createCookie();\n    const interval = setInterval(() => {\n      setMyText(getElapsedTime);\n      this.setState({\n        myText: getElapsedTime(document.cookie)\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Collect The Infinity Stones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"desc\",\n      children: [\"Gather stones based on how long its been since you last visited the website. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 105\n      }, this), \"To reset the timer press the 'reset' button.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"speaker\",\n      children: \"\\uD83D\\uDD07\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Elapsed Time: \", this.state.myText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gauntlet-flex\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"the infinity gauntlet\",\n        src: Gauntlet,\n        className: \"gauntlet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"W+w6zJNQDgHqpyDazkFZLyyaWNE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Gauntlet","App","myText","setMyText","useState","createCookie","cookie","Date","now","getElapsedTime","dateNow","elapsedTime","readableTime","toLocaleDateString","useEffect","interval","setInterval","setState","document","clearInterval","state"],"sources":["C:/Users/pauli/projects/infinity-stones/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport Gauntlet from './resources/gauntlet-empty.png';\n\nfunction App() {\n  \n  const [myText, setMyText] = React.useState('Original Text');\nfunction createCookie() {\n    let cookie = Date.now()\n    return cookie\n}\n\nfunction getElapsedTime(cookie) {\n    let dateNow = Date.now()\n    let elapsedTime = new Date(dateNow - cookie)\n    if (elapsedTime) {\n    let readableTime = new Date(elapsedTime.toLocaleDateString())\n    return readableTime\n    }\n    else return \"null\"\n}\n\n  React.useEffect(() => {\n    // Runs after the first render() lifecycle\n    createCookie();\n    const interval = setInterval(() => {\n      setMyText(getElapsedTime)\n      this.setState({myText: getElapsedTime(document.cookie)})\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Collect The Infinity Stones</h1>\n      <h2 className=\"desc\">Gather stones based on how long its been since you last visited the website. <br/>To reset the timer press the 'reset' button.</h2>\n      <h1 className=\"speaker\">ðŸ”‡</h1>\n      <h1>Elapsed Time: {this.state.myText}</h1>\n      <div className=\"gauntlet-flex\">\n      <img alt=\"the infinity gauntlet\" src={Gauntlet} className=\"gauntlet\"/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,KAAK,CAACK,QAAN,CAAe,eAAf,CAA5B;;EACF,SAASC,YAAT,GAAwB;IACpB,IAAIC,MAAM,GAAGC,IAAI,CAACC,GAAL,EAAb;IACA,OAAOF,MAAP;EACH;;EAED,SAASG,cAAT,CAAwBH,MAAxB,EAAgC;IAC5B,IAAII,OAAO,GAAGH,IAAI,CAACC,GAAL,EAAd;IACA,IAAIG,WAAW,GAAG,IAAIJ,IAAJ,CAASG,OAAO,GAAGJ,MAAnB,CAAlB;;IACA,IAAIK,WAAJ,EAAiB;MACjB,IAAIC,YAAY,GAAG,IAAIL,IAAJ,CAASI,WAAW,CAACE,kBAAZ,EAAT,CAAnB;MACA,OAAOD,YAAP;IACC,CAHD,MAIK,OAAO,MAAP;EACR;;EAECb,KAAK,CAACe,SAAN,CAAgB,MAAM;IACpB;IACAT,YAAY;IACZ,MAAMU,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCb,SAAS,CAACM,cAAD,CAAT;MACA,KAAKQ,QAAL,CAAc;QAACf,MAAM,EAAEO,cAAc,CAACS,QAAQ,CAACZ,MAAV;MAAvB,CAAd;IACD,CAH2B,EAGzB,IAHyB,CAA5B;IAIA,OAAO,MAAMa,aAAa,CAACJ,QAAD,CAA1B;EACD,CARD,EAQG,EARH;EAUA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAI,SAAS,EAAC,OAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAI,SAAS,EAAC,MAAd;MAAA,yGAAkG;QAAA;QAAA;QAAA;MAAA,QAAlG;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAI,SAAS,EAAC,SAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,6BAAmB,KAAKK,KAAL,CAAWlB,MAA9B;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAK,SAAS,EAAC,eAAf;MAAA,uBACA;QAAK,GAAG,EAAC,uBAAT;QAAiC,GAAG,EAAEF,QAAtC;QAAgD,SAAS,EAAC;MAA1D;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAvCQC,G;;KAAAA,G;AAyCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}